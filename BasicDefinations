1:- What is React ?
React is a JavaScript Library known for front-end development (or user interface). It is popular due to its component-based architecture, Single Page Applications (SPAs) and Virtual DOM for building web applications that are fast, efficient, and scalable.

Why Learn React JS?
React, the popular JavaScript library, offers several exciting reasons for developers to learn it.

ðŸ‘‰Flexibility: React allows you to build high-quality user interfaces across different platforms, thanks to its flexible library approach.
ðŸ‘‰Great Developer Experience: React makes it easier to write and understand code, offering a smooth development process.
ðŸ‘‰Strong Support from Facebook: Regular updates, bug fixes, and resources from Facebook ensure React stays up-to-date and reliable.
ðŸ‘‰Vast Community Support: React benefits from a large community, providing enough resources, tutorials, and troubleshooting help.
ðŸ‘‰Excellent Performance: Reactâ€™s efficient Virtual DOM ensures fast rendering and high performance for web applications.
ðŸ‘‰Easy Testing: Reactâ€™s structure and tools make testing simpler, improving code reliability and maintainability.

2:- What is state :- 
State in React refers to a built-in object that holds data or information about a component. It determines how a component renders and behaves. When the state changes, React re-renders the component to reflect theÂ updatedÂ data.

ðŸŒºTypes of States in ReactJs
ðŸ‘‰Local State
ðŸ‘‰Global State
ðŸ‘‰Server State
ðŸ‘‰UrlÂ Stat

ðŸ‘‰Local State:-
State that is manages within a single component.
Use Cases:-
ðŸ“–Managing UI element
ðŸ“–Temporary Data Specific to a component

ðŸ‘‰Global State:-
State thai is shared across multiple components
Use Cases:-
ðŸ“–Managing authenticated user data
ðŸ“–Managing global application themes or language preferences.
ðŸ‘‰Server State:-
State that comes from an external server (API) and needs to be integrated with UI state.
Use Cases:-
ðŸ“–Fetching and managing API data
ðŸ“–Handling loading states, erros, and caching.

ðŸ‘‰Url State:-
State stored in the URL, such as query parameters, pathname, and hash.
Use Cases:-
ðŸ“–Handling navigation and routing
ðŸ“–Maintaining state that persists when refreshing or sharing the URL
Code Example:-

import { useLocation, useSearchParams } from 'react-router-dom';

const Example = () => {
  const location = useLocation();
  const [searchParams] = useSearchParams();

  return (
    <div>
      <p>Current Path: {location.pathname}</p>
      <p>Query Param Value: {searchParams.get("example")}</p>
    </div>
  );
};
